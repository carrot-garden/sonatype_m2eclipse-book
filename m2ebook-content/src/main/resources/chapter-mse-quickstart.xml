<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.sonatype.com/tmp/docbook/xml/4.5/docbookx.dtd">
<chapter id="mse-quickstart">
  <title>Maven Studio for Eclipse Quickstart</title>

  <section id="mse-quickstart-sect-intro">
    <title>Introduction</title>

    <para>Maven Studio for Eclipse (MSE) gives you the ability to capture
    common configuration and projects for your developers with the Developer
    Onboarding feature. Using the Developer Onboarding feature, you can very
    quickly configure and deliver a common configuration across your entire
    enterprise.</para>

    <para>Newly hired developers or developers just starting on a new project
    usually take days to setup and configure all of the moving parts that go
    into an efficient development environment. With Developer Onboarding, a
    build engineer can capture all of the requirements in an MSE Codebase and
    publish this Lineup to a simple, single-click solution which will
    download, install, and configure an Eclipse IDE with all of the components
    necessary to be productive in minutes.</para>

    <section>
      <title>What is a Codebase?</title>

      <para>A Codebase describes an entire development environment including
      both the configuration of Eclipse and the projects that are to be
      checked out from source control. The Codebase contains two parts: A
      Lineup and one or more Source Trees as shown in <xref
      linkend="fig-mse-quickstart-codebase" />.</para>

      <figure id="fig-mse-quickstart-codebase">
        <title>Maven Studio for Eclipse Codebase Contents</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-codebase.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-codebase.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>What is a Lineup?</title>

      <para>A Lineup describes an Eclipse environment: the version of Eclipse
      installed, the versions of individual components of the Eclipse
      framework, and an inventory of all option or 3rd party plugins installed
      in a given environment. When you use MSE to simplify your environment,
      you publish a Lineup to Nexus Team Edition.</para>
    </section>

    <section>
      <title>What is a Source Tree?</title>

      <para>A Codebase includes one or more Source Trees. A Source Tree is a
      location in a Source Control Management system like Git or Subversion.
      For example, if your lineup needs to checkout projects from two internal
      corporate Subversion servers, your Lineup would include two Source Trees
      pointing to two Subversion locations. A Source Tree can contain one or
      more Roots.</para>
    </section>

    <section>
      <title>What is a Source Tree Root?</title>

      <para>A Root is a location within a SCM repository which is imported
      into an Eclipse installation as a Maven project. If a Source Tree does
      not define a list of Roots, it has an implicit root of “/”, this is the
      directory in which Maven Studio for Eclipse will look for a Maven POM to
      import. If you want to control the directories from which a project will
      be imported from a Source Tree, you would define one or more Source Tree
      Roots.</para>

      <para>For example, if you configured a Source Tree to point to the
      Subversion URL http://yourserver.com/svn/trunk, and you configured a
      Root at project-a/ and a Root at project-b/, MSE will checkout the
      source from these two directories and import these directories as Maven
      projects. Every defined Root must contain a Maven pom.xml file for a
      successful import.</para>
    </section>

    <section>
      <title>Use Case for a Build Engineer</title>

      <para>A Build Engineer uses Maven Studio for Eclipse to create a
      Codebase and publish this Codebase to a repository on Nexus Team
      Edition. Once this Codebase has been published, the Build Engineer can
      then send a an e-mail to team members directing them to a one-click
      installation.</para>

      <figure id="fig-mse-quickstart-mse-random">
        <title>Maven Studio for Eclipse Interacting with Nexus Team
        Edition</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-mse-random.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-mse-random.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Getting Started with Maven Studio for Eclipse</title>

    <para>In this quickstart guide, you will:</para>

    <orderedlist>
      <listitem>
        <para>Configure Nexus Team Server</para>
      </listitem>

      <listitem>
        <para>Materialize the Sample Demo Maven Lineup</para>
      </listitem>

      <listitem>
        <para>Create a Custom MSE Codebase</para>
      </listitem>

      <listitem>
        <para>Configure a Custom MSE Lineup</para>
      </listitem>

      <listitem>
        <para>Configure an MSE Source Tree</para>
      </listitem>

      <listitem>
        <para>Publish an MSE Codebase to Nexus Team Server</para>
      </listitem>

      <listitem>
        <para>Materialize a Custom MSE Codebase</para>
      </listitem>
    </orderedlist>

    <section>
      <title>Nexus Team Edition Prerequisites</title>

      <para>Before starting the installation, make sure that you have
      satisfied the following preconditions for the server running Nexus Team
      Edition:</para>

      <itemizedlist>
        <listitem>
          <para>Nexus Team Edition must be installed on a server that does not
          have Nexus Open Source or Nexus Professional installed on it.</para>
        </listitem>

        <listitem>
          <para>You are running a Java 6 Java Development Kit downloaded from
          Oracle on the server that will run Nexus Team Edition.</para>
        </listitem>

        <listitem>
          <para>You will need administrative privileges on the server running
          Nexus Team Edition.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Workstation Prerequisites</title>

      <para>Before starting the installation, make sure that you have
      satisfied the following preconditions for the workstations which will be
      running Maven Studio for Eclipse and materializing Eclipse installations
      from Nexus Team Edition:</para>

      <itemizedlist>
        <listitem>
          <para>You have installed a Java Development Kit version 1.6.0_18 or
          higher from Oracle. Maven Studio for Eclipse requires a JDK version
          of 1.6.0_18.</para>
        </listitem>

        <listitem>
          <para>If you are installing Maven Studio for Eclipse into an
          existing Eclipse installation, you must remove any previously
          installed version of the m2eclipse plugin.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>Installing Nexus Team Edition</title>

    <para>The first step for setting up your environment for Maven Studio for
    Eclipse is to install Nexus Team Edition.</para>

    <section>
      <title>Download Nexus Team Edition</title>

      <para>If you are reading this quickstart guide, you should have received
      an e-mail from Sonatype containing instructions for downloading Nexus
      Team Edition.</para>

      <para>Download the nexus-team-webapp-1.6.1.1-bundle.tar.gz or
      nexus-webapp-1.6.1.1-bundle.zip archive to the server which is going to
      host Nexus.</para>
    </section>

    <section>
      <title>Unpack Nexus Team Edition</title>

      <para>After downloading the Nexus Team Edition archive, unpack the
      archive:</para>

      <itemizedlist>
        <listitem>
          <para>On a Linux machine, you might install Nexus Team Edition in
          /usr/local/nexus-team-1.6.1.1 or /opt/nexus-team-1.6.1.1.</para>
        </listitem>

        <listitem>
          <para>On a Windows machine, you might choose to install Nexus Team
          Edition in c:\Program Files\Nexus Team.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Start Nexus Team Edition</title>

      <para>To start Nexus Team Edition locate the appropriate platform
      directory under ${NEXUS_HOME}/bin/jsw</para>

      <itemizedlist>
        <listitem>
          <para>On Windows, run nexus.bat to start Nexus.</para>
        </listitem>

        <listitem>
          <para>On OSX or Linux, run nexus start to start Nexus, and nexus
          stop to stop Nexus.</para>
        </listitem>
      </itemizedlist>

      <note>
        <para>On Windows, you may be prompted to allow the service to modify
        the Windows Firewall.</para>
      </note>
    </section>

    <section>
      <title>Login as a Nexus Administrator</title>

      <para>Go to http://localhost:8081/nexus, and login with the default
      administrator credentials: Username: admin, Password: admin123</para>

      <figure id="fig-mse-quickstart-login">
        <title>Login to Nexus Team Edition</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-login.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-login.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Configure Nexus Team Server</title>

    <para>Once you have installed the Nexus Team Edition, you must configure a
    few Nexus Server settings which will affect the publishing of P2
    Lineups.</para>

    <section>
      <title>Open the Nexus Server Configuration Panel</title>

      <para>To configure your Nexus Server, open up the Server configuration
      panel by selecting Administration → Server from the Nexus menu.</para>

      <figure id="fig-mse-quickstart-srvr-config">
        <title>Opening the Server Configuration Panel</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-server-link.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-server-link.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configure Proxy Settings</title>

      <para>If your Nexus Server needs to use an HTTP Proxy, you must
      configure the proxy settings in the Nexus Server configuration.</para>

      <figure id="fig-mse-quickstart-proxy-settings">
        <title>Opening the Server Configuration Panel</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-proxy-settings.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-proxy-settings.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Save the Nexus Server Configuration</title>

      <para>Click on Server Configuration panel’s Save button to save your
      Nexus server configuration.</para>
    </section>

    <section>
      <title>Add a New P2 Proxy Repository</title>

      <para>Next, add a new P2 Proxy Repository for the Eclipse Checkstyle
      (eclipse-cs) plugin. Later on in this guide, you will be creating a
      custom Lineup which includes the Eclipse Checkstyle plugin. Go to
      Views/Repositories -&gt; Repositories, and click on the Add... button.
      Select Proxy Repository.</para>

      <figure id="fig-mse-quickstart-adding-proxy">
        <title>Adding a New P2 Proxy Repository</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-new-proxy-repo.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-new-proxy-repo.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configure the New Proxy Repository</title>

      <para>Once you’ve created the New Proxy repository, configure the
      following parameters for the new repository:</para>

      <figure id="fig-mse-quickstart-new-proxy-repo">
        <title>Configuring New Proxy Repository for Checkstyle Plugin</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-new-proxy-repo-checkstyle.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-new-proxy-repo-checkstyle.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Run the Publish Lineups Scheduled Task in Nexus Team Server</title>

    <para>After configuring your Nexus Team server, you must create a
    Scheduled Task to Publish a P2 Repository Lineup.</para>

    <section>
      <title>Execute a Scheduled Task for P2 Lineups</title>

      <para>To execute a scheduled task, click on Administration → Scheduled
      Tasks in the Nexus Menu. Locate the “Publish P2 Lineup” Job in the list
      of configured tasks. Right-click on this task, and select Run.</para>

      <figure id="fig-mse-quickstart-open-scheduled">
        <title>Opening the Scheduled Tasks Configuration Panel</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-scheduled-tasks-menu-item.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-scheduled-tasks-menu-item.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Click Yes in the confirmation dialog to execute the Scheduled
      Task.</para>
    </section>

    <section>
      <title>Verify P2 Lineups are Published</title>

      <para>After running the job, click on the Refresh button in the
      Scheduled Tasks panel as shown in the following figure.</para>

      <figure id="fig-mse-quickstart-running-p2">
        <title>Running the P2 Lineup Publishing Task</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-task-running.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-task-running.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>While the job is running, the Status is RUNNING. This job will run
      for approximately 1-3 minutes. While the job is running, press the
      Refresh button to refresh the status of the running job. Once the Job is
      completed, the status will change to SUBMITTED as shown in the following
      figure.</para>

      <figure id="fig-mse-quickstart-verify-completion">
        <title>Verify the Completion of the P2 Lineup Publishing Task</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-task-complete.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-task-complete.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Materialize a Sample Workspace</title>

    <para>Once you’ve configured Nexus Team server and published the demo P2
    lineups, you are ready to materialize one of the demo workspaces. In this
    quickstart guide, you are going to materialize the sample Maven workspace.
    Once this workspace is materialized, you can then use Maven Studio for
    Eclipse to create your own custom P2 lineups.</para>

    <section>
      <title>Open the Repositories Panel</title>

      <para>To open the Repositories Panel, click on Views/Repositories -&gt;
      Repositories. Once the Repositories panel is open, you should see a list
      of all of the User Managed Repositories.</para>
    </section>

    <section>
      <title>Select Nexus Managed Repositories</title>

      <para>The MSE Codebase Repository is a Nexus Managed Repository. To view
      all Nexus Managed Repositories, select Nexus Managed Repositories from
      the repository type drop down.</para>

      <figure id="fig-mse-quickstart-view-managed">
        <title>Viewing Nexus Managed Repositories</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-select-managed-repos.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-select-managed-repos.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Select Sonatype MSE Repository</title>

      <para>In the list of Nexus Managed Repositories, select the MSE Codebase
      Repository. This repository contains the sample Apache Maven
      lineup.</para>

      <figure id="fig-mse-quickstart-select-onboard">
        <title>Selecting the Onboarding Repositories</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-onboarding-repo.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-onboarding-repo.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Click on the MSE Installer for the Maven Lineup</title>

      <para>Maven Studio for Eclipse ships with a demonstration project: the
      Apache Maven project. The first thing you will want to do is materialize
      one of these lineups to get a fully functioning installation of Maven
      Studio for Eclipse.</para>

      <para>Once you select the Onboarding Project Repository, go to the
      Browse Storage tab and navigate to the
      org/sonatype/mse/codebases/demo-maven/0.0.1 folder. Right-click on the
      mse-codebase.jnlp file and choose Download.</para>

      <figure id="fig-mse-quickstart-download-demo">
        <title>Downloading the Demo Maven Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-download-maven-jnlp.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-download-maven-jnlp.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Run the MSE Installer</title>

      <para>When you download the mse-codebase.jnlp file, Java Web Start will
      download, verify, and start the MSE Installer. If this is the first time
      you are running the MSE Installer, you will be asked to verify that the
      MSE Installer is trusted.</para>

      <figure id="fig-mse-quickstart-mat-work">
        <title>Running the MSE Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-materialize-workspace-dialog.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-materialize-workspace-dialog.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Supply Server and Source Control Credentials</title>

      <para>You will then be asked to supply credentials for any source code
      repository or server involved in the installation process. Check the
      Anonymous access checkbox to the right of the Username field and click
      on the Next button.</para>

      <figure id="fig-mse-quickstart-svn-creds">
        <title>Supply Subversion and Source Control Credentials</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-supply-svn-credentials.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-supply-svn-credentials.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Once you click next, the M2E installer will validate that is can
      connect to the source code repository and Nexus. Click Next on the
      following dialog:</para>

      <figure id="fig-mse-quickstart-validation-panel">
        <title>Successful Validation of MSE Installer Requirements</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-verify-panel.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-verify-panel.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Specify Installation Directories</title>

      <para>Next, the MSE installer will ask you to supply two directories:
      The Installation Directory, where the MSE Installer installs Eclipse,
      and the Workspace Location, where MSE Installer puts projects and code.
      You can Supply custom directories or accept the default values supplied
      by the MSE installer.</para>

      <figure id="fig-mse-quickstart-installer-dirs">
        <title>Supplying Installation Directories for MSE Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-supply-installation-dirs.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-supply-installation-dirs.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Verify Completed Eclipse Installation</title>

      <para>Clicking on Finish will start the process of installing the
      Eclipse IDE with all of the plugins specified in the MSE Lineup. Once
      the installation is completed, you should see an Eclipse IDE
      installation.</para>

      <note>
        <para>Windows may prompt you to authorize the Eclipse IDE the first
        time it has been launched. You may see a firewall dialog asking for
        permission to execute Eclipse. You should approve this request.</para>
      </note>

      <para>Once the Eclipse IDE is visible, give the tool a few minutes to
      update indexes and to checkout project source code from source control.
      Once this process is finished, you should see a list of projects in the
      Apache Maven project. Once the Eclipse workspace has been materialized,
      you can start to work with the projects it checked out.</para>

      <figure id="fig-mse-quickstart-projects-eclipse">
        <title>Maven Projects Displayed in Eclipse</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-maven-projects-in-eclipse.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-maven-projects-in-eclipse.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configure Password Recovery</title>

      <para>On some platforms, Eclipse will then prompt you to set up the
      Master Password and Password Recovery options in Eclipse. Click Yes in
      the Secure Storage dialog.</para>

      <figure id="fig-mse-quickstart-master-password">
        <title>Creating a Master Password for Eclipse Password
        Recovery</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-master-password-created.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-master-password-created.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>In the Password Recovery dialog type in two questions that will
      allow you to recover the master password for this Eclipse workspace.
      Once you’ve typed in these questions and answer, click OK.</para>

      <figure id="fig-mse-quickstart-password-recovery">
        <title>Configuring Password Recovery</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-password-recovery-setup.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-password-recovery-setup.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Creating a New MSE Lineup</title>

    <para>Maven Studio for Eclipse gives you the tools you need to define a
    custom Eclipse installation which can be materialized with a simple click
    of a button. If you’ve followed the instructions in this document, you’ve
    already used that capability to materialize the demonstration instance of
    Maven Studio for Eclipse which contains the Maven project.</para>

    <para>Next, you are going to use the custom lineup capabilities of Maven
    Studio for Eclipse to define a custom lineup which will checkout source
    code from a Subversion repository.</para>

    <section>
      <title>Create a New MSE Lineup Project</title>

      <para>To create a new MSE Lineup, click on File -&gt; New --&gt;
      Other... in Eclipse as shown in the figure below.</para>

      <figure id="fig-mse-quickstart-new-lineup-project">
        <title>Creating a New Lineup Project (Select New -&gt; Other)</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-new-other.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-new-other.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Select the New P2 Lineup Wizard</title>

      <para>Next, select New P2 Lineup from the Maven Studio for Eclipse
      folder in the wizard selection dialog.</para>

      <figure id="fig-mse-quickstart-lineup-wizard">
        <title>Creating a New Lineup Project (Select New P2 Lineup
        Wizard)</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-select-wizard.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-select-wizard.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configure Nexus and Lineup Coordinates</title>

      <para>Clicking Next will display a dialog that contains the Nexus Server
      URL, the Nexus credentials used to connect to Nexus, and the Lineup
      Coordinates.</para>

      <para>Enter your administrative credentials for Eclipse in this dialog
      and supply Lineup Coordinates for your MSE Lineup. Change the Group Id
      to “com.sample” or choose a group identifier that makes sense for your
      organization. Click on Next.</para>

      <figure id="fig-mse-quickstart-lineup-coord">
        <title>Supply Lineup Coordinates and Nexus Credentials</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-lineup-setup.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-lineup-setup.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <note>
        <para>Every artifact in Nexus has a coordinate which consists of a
        Group ID, Artifact ID, and Version. The Group ID groups projects
        together and is often unique to an organization or a project. The
        Artifact ID is a unique identifier for a project (or in this case a
        Lineup).</para>
      </note>
    </section>

    <section>
      <title>Select Runtime Platform and Memory</title>

      <para>Select the platforms that are appropriate for your platform,
      Specify the heap size for your Eclipse installation in megabytes, and
      check the “Load Installable Units from Current Eclipse Installation”
      checkbox.</para>

      <figure id="fig-mse-quickstart-runtime-platform">
        <title>Select Runtime Platform and Memory</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-platform.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-platform.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <note>
        <para>If you select “Load Installable Units from Current Eclipse
        Installation”, Maven Studio for Eclipse will use the current Eclipse
        installation as a template for your new P2 Lineup.</para>
      </note>
    </section>

    <section>
      <title>Configure the Contents of the Lineup</title>

      <para>The next step in the P2 Lineup wizard is the Lineup Editor. This
      interface is where you configure the contents of the P2 Lineup. You can
      configure which Eclipse components and plugins are installed in a
      materialized Eclipse installation.</para>

      <figure id="fig-mse-quickstart-contents-p2">
        <title>Configuring Contents of a P2 Lineup</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-lineup-editor.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-lineup-editor.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The first list of “Installable Units” are the plugins and
      components that are installed in your Eclipse installation. The default
      components are Maven Studio Materialization Support and Sonatype Studio
      Base IDE Lineup. These two components are required for all Maven Studio
      for Eclipse installations. Note that the version number for Maven Studio
      Materialization Support is 0.0.0. This special “0.0.0” version number
      tells Eclipse to install the latest version currently available.</para>

      <para>If you selected “Load Installable Units from Current Eclipse
      Installation” in the previous step, this list should contain Eclipse
      plugins, components, and update sites configured in your current Eclipse
      installation.</para>
    </section>

    <section>
      <title>Add a New Repository</title>

      <para>Click on the Add... button in the Lineup Editor.</para>

      <figure id="fig-mse-quickstart-configuring-p2">
        <title>Adding the Checkstyle Repository to the Lineup Editor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-add-checkstyle-repo-lineup-editor.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-add-checkstyle-repo-lineup-editor.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Name the new repository “Eclipse-Checkstyle Integration” and use a
      Location of: http://eclipse-cs.sf.net/update/</para>
    </section>

    <section>
      <title>Add the Checkstyle Plugin Installable Unit</title>

      <para>After adding the repository, click on OK. Then in the Lineup
      Editor add a new Installable Unit by clicking on Add... next to the list
      of Installable Units. Enter “http://eclipse-cs.sf.net/update” into the
      Work with: field, press Enter, and then select the most recent version
      of the Checkstyle plugin.</para>

      <figure id="fig-mse-quickstart-adding-checkstyle">
        <title>Adding the Checkstyle Installable Unit to the Lineup
        Editor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-add-checkstyle-installable-unit.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-add-checkstyle-installable-unit.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Verify the P2 Lineup</title>

      <para>Once you have added the Checkstyle repository and the Checkstyle
      plugin as an installable unit, click on the Next button. When you click
      on Next, Maven Studio for Eclipse will verify that it has access to the
      appropriate proxy repositories on Nexus Team server.</para>

      <figure id="fig-mse-quickstart-verify-lineup-summary">
        <title>Verifying the Lineup Summary</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-create-new-lineup-lineup-summary.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-create-new-lineup-lineup-summary.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Clicking Finish will create the P2 Lineup in your workspace under
      the Artifact ID of your new lineup.</para>

      <figure id="fig-mse-quickstart-new-codebase">
        <title>Viewing Your New Codebase in the Eclipse IDE</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-mse-codebase-package-explorer.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-mse-codebase-package-explorer.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Configuring a New Codebase</title>

    <para>Once you’ve created and configured your P2 Lineup, you will need to
    configure a Source Tree for your Codebase. When you configure a P2 Lineup,
    you are telling Maven Studio for Eclipse what Eclipse components and
    plugins to install when it materializes an Eclipse installation from your
    Nexus Team server. Once Maven Studio for Eclipse materializes an Eclipse
    installation it will also checkout Maven projects from source
    control.</para>

    <para>In this section, you are going to configure your newly created
    Codebase to checkout source code from an open source Subversion
    repository. In a corporate environment, instead of configuring your
    Codebase to pull projects from an Open Source project, you would be
    configuring your Codebase to pull projects from your own source control
    system.</para>

    <para>If the baseline Codebase Overview is not already loaded, click on
    mse-codebase.xml in the misc folder under the baselineup project in your
    Eclipse workspace.</para>

    <section>
      <title>Maximize the Codebase Overview</title>

      <para>If you just completed the previous section and defined a P2
      Lineup, you should see the Codebase Overview in your Eclipse
      environment.</para>

      <para>Maximize the Codebase Overview by clicking on the maximize button
      as shown below.</para>

      <figure id="fig-mse-quickstart-maximize-codebase-overview">
        <title>Maximizing the Codebase Overview</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-maximize-baseline.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-maximize-baseline.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Once you have maximized the Codebase Overview, you will see the
      following form.</para>

      <figure id="fig-mse-quickstart-codebase-overview">
        <title>Codebase Overview</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-baseline-overview.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-baseline-overview.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Create a New Source Tree</title>

      <para>A Source Tree is a collection of projects checked out from source
      control.</para>

      <figure id="fig-mse-quickstart-new-source-tree">
        <title>Creating a New Source Tree</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-new-source-tree-commons.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-new-source-tree-commons.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Click on Create... under Source Trees and name your new Source
      Tree “Apache Commons”. Then click on OK.</para>
    </section>

    <section>
      <title>Configure the New Source Tree</title>

      <para>Once you create a new Source Tree, the Codebase Overview will
      switch to a form that allows you to configure a new Source Tree. This
      dialog will show information about the source tree, the SCM location,
      Roots in the Source Tree, and information about the project.</para>
    </section>

    <section>
      <title>Configure the SCM Location</title>

      <para>Click on the drop down next to SCM Location and select “svn” as
      the Source Control protocol. Then type the following URL into the SVN
      location:
      http://svn.apache.org/repos/asf/commons/proper/lang/trunk</para>

      <figure id="fig-mse-quickstart-commons-source-tree">
        <title>Configuring the Commons Source Tree</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-commons-source-tree.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-commons-source-tree.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Click on Validate Access. Maven Studio for Eclipse will then
      attempt to access the source code repository to validate that you have
      access to this URL.</para>
    </section>

    <section>
      <title>Add a Feed URL</title>

      <para>Click on Create... under Feeds and add in the following URL for
      this mailing list feed:
      http://mail-archive.apache.org/mod_mbox/commons-user/?format=atom</para>

      <para>Click on OK.</para>

      <figure id="fig-mse-quickstart-commons-feed">
        <title>Configuring the Commons Feed URL</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-commons-feed-url.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-commons-feed-url.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Publishing a Codebase</title>

    <para>Once your P2 Lineup has been configured with a Source Tree, you can
    publish this Lineup to your Nexus Team server.</para>

    <para>If it isn’t already open, open the P2 Lineup overview, click on
    mse-codebase.xml under the baseline project in your Eclipse
    workspace.</para>

    <section>
      <title>Publish Your Codebase to Nexus</title>

      <para>In the upper right-hand corner of the P2 Lineup Overview form you
      should see a Publish button next to a server icon.</para>

      <figure id="fig-mse-quickstart-publish-button">
        <title>Publish Button on Codebase Overview</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-publish-button.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-publish-button.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Clicking on this Publish button will tell Maven Studio for Eclipse
      to publish the newly configured P2 Lineup to your Nexus Team
      server.</para>

      <para>If your Codebase has unsaved changed, Eclipse will ask you if you
      want to Save your current changes. Click Yes.</para>
    </section>

    <section>
      <title>Supply Nexus Team URL and Credentials</title>

      <para>Clicking the Publish button will display the Publish Codebase
      Descriptor dialog. In this dialog you will supply the Base URL of your
      Nexus Team server, a Nexus username, and a Nexus password.</para>

      <figure id="fig-mse-quickstart-publish-codebase-nx-creds">
        <title>Publish Codebase Descriptor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-publish-codebase-descriptor.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-publish-codebase-descriptor.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Publish the Codebase</title>

      <para>Click OK, and Maven Studio for Eclipse will publish the Codebase
      to your Nexus Team Server.</para>

      <figure id="fig-mse-quickstart-publishing-codebase">
        <title>Published Codebase Descriptor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-mse-codebase-published.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-mse-codebase-published.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>After the Codebase has been published you can close
      Eclipse.</para>
    </section>
  </section>

  <section>
    <title>Materializing a Codebase</title>

    <para>Once you have configured your Custom Codebase and published it to
    your Nexus Team Server you can test your new P2 Lineup by materializing it
    to your workstation. To do this follow the same steps you used to
    materialize the demonstation Maven lineup which shipped with Maven Studio
    for Eclipse.</para>

    <section>
      <title>Download the Codebase Installer</title>

      <para>In Nexus Team server, select the Views/Repositories -&gt;
      Repository panel, and then view the Nexus Managed Repositories. Select
      the MSE Codebase Repository and navigate to the
      com/mycompany/baselineup/1.0 folder. Right-click on the
      mse-codebase.jnlp file and select Download.</para>

      <figure id="fig-mse-quickstart-select-published-codebase">
        <title>Select Published Codebase Descriptor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-select-new-jnlp-lineup.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-select-new-jnlp-lineup.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Supply Apache Subversion Credentials</title>

      <para>Since the Codebase created and published in the previous section
      contains a Source Tree that points to the Apache Subversion server, you
      should leave Anonymous access checked and click on the Next button to
      continue.</para>

      <figure id="fig-mse-quickstart-custom-subversion-creds">
        <title>Supply Subversion Credentials to MSE Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-commons-credentials.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-commons-credentials.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Supply Nexus Credentials</title>

      <para>The MSE Installer will ask you for your Nexus credentials during
      the installation process. You should deselect the Anonymous access
      checkbox and supply your Nexus credentials. If you have not configured a
      new Nexus user, use the default credentials admin/admin123.</para>

      <figure id="fig-mse-quickstart-custom-nexus-creds">
        <title>Supply Nexus Credentials to MSE Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-nexus-credentials.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-nexus-credentials.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configure Materialization Directories</title>

      <para>Nexus supplies the directories for the materialization. If you
      want to override the default directories, specify an installation
      directory for the Eclipse installation and a workspace for your projects
      and workspace-specific configuration.</para>

      <figure id="fig-mse-quickstart-custom-install-dirs">
        <title>Choosing Installation Directories in the MSE Installer</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-choose-project-directories.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-choose-project-directories.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Use Your Materialized Eclipse Installation</title>

      <para>Once the materialization process is completed, you will have a
      customized installation of Eclipse complete with the Eclipse-Checkstyle
      plugin and the source code for Apache Commons Lang. You can use this
      same functionality to create custom, one-click solutions for developer
      on-boarding.</para>

      <figure id="fig-mse-quickstart-materialized-custom">
        <title>A Materialized, Custom, Eclipse Workspace</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-materialized-custom-install.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-materialized-custom-install.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <figure id="fig-mse-quickstart-checkstyle-final">
        <title>Checkstyle View from Materialized Workspae</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/quickstart-checkstyle-windows.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/quickstart-checkstyle-windows.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Troubleshooting Codebase Materialization</title>

    <para>This section attempts to summarize some of the problems that can
    occur during Nexus Team Edition installation and Codebase materialization.
    If you encounter any problems or difficulties running through this
    quickstart chapter, please contact Sonatype at <ulink
    url="mailto:book@sonatype.org">book@sonatype.org</ulink>.</para>

    <section>
      <title>Reset Subversion Connection</title>

      <para>The demonstration codebase contains source trees which depend upon
      public Subversion servers hosted by the Apache Software Foundation.
      Although these servers are some of the most reliable and widely used
      source control systems you will find, you might experience problems
      during materialization if your connection is reset.</para>

      <figure id="fig-mse-svn-connect-reset">
        <title>Subversion Connect Reset During Materialization</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/mse-trouble-svn-connection-reset.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/mse-codebase-sourcetree-overview.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>After the MSE Installer starts a newly installed Eclipse instance,
      it will attempt to checkout source code from the source trees configured
      in the codebase. If you see the error dialog shown in <xref
      linkend="fig-mse-svn-connect-reset" />, restart the materialization
      process. The connection to a Subversion server could be reset by either
      the server or the client, and the most likely scenario is that there was
      some brief downtime on the server-side. Running the materialization
      again should be enough to fix this problem.</para>

      <para>If the problem continues to happen even after a retry, you might
      want to investigate any process or system that mght be running locally
      to monitor and secure a network. Checking out a large project from a
      public Subversion server can involve a single, long-lived connection to
      a remote server. Make sure that there are no security systems
      terminating the connection to the remote Subversion server on your end
      of the connection.</para>
    </section>
  </section>
</chapter>
